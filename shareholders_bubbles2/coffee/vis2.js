// Generated by CoffeeScript 1.6.3
var BubbleChart, root,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

BubbleChart = (function() {
  function BubbleChart(data) {
    this.hide_details = __bind(this.hide_details, this);
    this.show_details = __bind(this.show_details, this);
    this.hide_industry = __bind(this.hide_industry, this);
    this.display_industry = __bind(this.display_industry, this);
    this.move_towards_industry = __bind(this.move_towards_industry, this);
    this.display_by_industry = __bind(this.display_by_industry, this);
    this.move_towards_center = __bind(this.move_towards_center, this);
    this.display_group_all = __bind(this.display_group_all, this);
    this.start = __bind(this.start, this);
    this.create_vis = __bind(this.create_vis, this);
    this.create_nodes = __bind(this.create_nodes, this);
    var max_amount;
    this.data = data;
    this.width = 950;
    this.height = 760;
    this.tooltip = CustomTooltip("gates_tooltip", 240);
    this.center = {
      x: this.width / 2,
      y: this.height / 2.2
    };
    this.industry_centers = {
      "Technology": {
        x: 350,
        y: this.height / 2.5
      },
      "Financial": {
        x: 375,
        y: this.height / 1.45
      },
      "Energy": {
        x: 475,
        y: this.height / 1.4
      },
      "Basic materials": {
        x: 625,
        y: this.height / 1.35
      },
      "Industrial": {
        x: 650,
        y: this.height / 3
      },
      "Utilities": {
        x: 750,
        y: this.height / 1.3
      },
      "Communications": {
        x: 450,
        y: this.height / 3
      },
      "Consumer,Non-cyclical": {
        x: 250,
        y: this.height / 1.4
      },
      "Consumer,Cyclical": {
        x: 550,
        y: this.height / 3
      }
    };
    this.layout_gravity = -0.01;
    this.damper = 0.1;
    this.vis = null;
    this.nodes = [];
    this.force = null;
    this.circles = null;
    this.fill_color = d3.scale.ordinal().domain(["Technology", "Financial", "Energy", "Basic materials", "Industrial", "Utilities", "Communications", "Consumer,Non-cyclical", "Consumer,Cyclical"]).range(["#FFFF00", "#00FFFF", "#00ff00", "#ff00ff", "#FF0000", "#6600CC", "#0000FF", "#FF6600", "#9900CC"]);
    max_amount = d3.max(this.data, function(d) {
      return parseInt(d.total_amount);
    });
    this.radius_scale = d3.scale.pow().exponent(.5).domain([0, max_amount]).range([2, 85]);
    this.create_nodes();
    this.create_vis();
  }

  BubbleChart.prototype.create_nodes = function() {
    var _this = this;
    this.data.forEach(function(d) {
      var node;
      node = {
        id: d.id,
        radius: _this.radius_scale(parseInt(d.total_amount * 5)),
        value: d.total_amount,
        name: d.name,
        industry: d.industry,
        company: d.company,
        x: Math.random() * 900,
        y: Math.random() * 800
      };
      return _this.nodes.push(node);
    });
    return this.nodes.sort(function(a, b) {
      return b.value - a.value;
    });
  };

  BubbleChart.prototype.create_vis = function() {
    var that,
      _this = this;
    this.vis = d3.select("#vis").append("svg").attr("width", this.width).attr("height", this.height).attr("id", "svg_vis");
    this.circles = this.vis.selectAll("circle").data(this.nodes, function(d) {
      return d.name;
    });
    that = this;
    this.circles.enter().append("circle").attr("r", 0).attr("fill", function(d) {
      return _this.fill_color(d.industry);
    }).attr("stroke-width", 2).attr("id", function(d) {
      return "" + d.name;
    }).on("mouseover", function(d, i) {
      return that.show_details(d, i, this);
    }).on("mouseout", function(d, i) {
      return that.hide_details(d, i, this);
    });
    return this.circles.transition().duration(2000).attr("r", function(d) {
      return d.radius;
    });
  };

  BubbleChart.prototype.charge = function(d) {
    return -Math.pow(d.radius, 2.0) / 8;
  };

  BubbleChart.prototype.start = function() {
    return this.force = d3.layout.force().nodes(this.nodes).size([this.width, this.height]);
  };

  BubbleChart.prototype.display_group_all = function() {
    var _this = this;
    this.force.gravity(this.layout_gravity).charge(this.charge).friction(0.9).on("tick", function(e) {
      return _this.circles.each(_this.move_towards_center(e.alpha)).attr("cx", function(d) {
        return d.x;
      }).attr("cy", function(d) {
        return d.y;
      });
    });
    this.force.start();
    return this.hide_industry();
  };

  BubbleChart.prototype.move_towards_center = function(alpha) {
    var _this = this;
    return function(d) {
      d.x = d.x + (_this.center.x - d.x) * (_this.damper + 0.02) * alpha;
      return d.y = d.y + (_this.center.y - d.y) * (_this.damper + 0.02) * alpha;
    };
  };

  BubbleChart.prototype.display_by_industry = function() {
    var _this = this;
    this.force.gravity(this.layout_gravity).charge(this.charge).friction(0.9).on("tick", function(e) {
      return _this.circles.each(_this.move_towards_industry(e.alpha)).attr("cx", function(d) {
        return d.x;
      }).attr("cy", function(d) {
        return d.y;
      });
    });
    this.force.start();
    return this.display_industry();
  };

  BubbleChart.prototype.move_towards_industry = function(alpha) {
    var _this = this;
    return function(d) {
      var target;
      target = _this.industry_centers[d.industry];
      d.x = d.x + (target.x - d.x) * (_this.damper + 0.02) * alpha * 1.1;
      return d.y = d.y + (target.y - d.y) * (_this.damper + 0.02) * alpha * 1.1;
    };
  };

  BubbleChart.prototype.display_industry = function() {
    var industry, industry_data, industry_x, industry_y,
      _this = this;
    industry_x = {
      "Technology": 200,
      "Financial": 375,
      "Energy": 525,
      "Basic materials": 700,
      "Industrial": 775,
      "Utilities": 850,
      "Communications": 400,
      "Consumer, Non-cyclical": 175,
      "Consumer, Cyclical": 600
    };
    industry_y = {
      "Technology": 15,
      "Financial": 600,
      "Energy": 600,
      "Basic materials": 600,
      "Industrial": 15,
      "Utilities": 600,
      "Communications": 15,
      "Consumer, Non-cyclical": 600,
      "Consumer, Cyclical": 15
    };
    industry_data = d3.keys(industry_x);
    industry = this.vis.selectAll(".industry").data(industry_data);
    return industry.enter().append("text").attr("class", "industry").attr("x", function(d) {
      return industry_x[d];
    }).attr("y", function(d) {
      return industry_y[d];
    }).attr("text-anchor", "middle").text(function(d) {
      return d;
    });
  };

  BubbleChart.prototype.hide_industry = function() {
    var industry;
    return industry = this.vis.selectAll(".industry").remove();
  };

  BubbleChart.prototype.show_details = function(data, i, element) {
    var content;
    d3.select(element).attr("stroke", "black");
    content = "<span class=\"name\">" + data.name + "</span><br/>";
    content += "<span class=\"title\"> " + data.company + "</span><br/>";
    content += "<span class=\"title\">Value of shares:</span><span class=\"value\"> $" + (addCommas(data.value)) + "</span>";
    return this.tooltip.showTooltip(content, d3.event);
  };

  BubbleChart.prototype.hide_details = function(data, i, element) {
    var _this = this;
    d3.select(element).attr("stroke", function(d) {
      return d3.rgb(_this.fill_color(d.industry)).darker();
    });
    return this.tooltip.hideTooltip();
  };

  return BubbleChart;

})();

root = typeof exports !== "undefined" && exports !== null ? exports : this;

$(function() {
  var chart, render_vis,
    _this = this;
  chart = null;
  render_vis = function(csv) {
    chart = new BubbleChart(csv);
    chart.start();
    return root.display_all();
  };
  root.display_all = function() {
    return chart.display_group_all();
  };
  root.display_industry = function() {
    return chart.display_by_industry();
  };
  root.toggle_view = function(view_type) {
    if (view_type === 'industry') {
      return root.display_industry();
    } else {
      return root.display_all();
    }
  };
  return d3.csv("data/500CLEAN.csv", render_vis);
});
